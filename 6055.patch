From 26bf94c07b444a10108086174513e50e42fb9d4c Mon Sep 17 00:00:00 2001
From: Laurence McGlashan <laurence.mcglashan@gmail.com>
Date: Tue, 14 Sep 2021 12:19:54 +0100
Subject: [PATCH 1/3] If longpaths is true and filters are enabled, pass
 git_repository through the filtering code to ensure the cached longpath
 setting is returned.

Fixes: #6054
---
 src/blob.c             |  7 ++++---
 tests/win32/longpath.c | 28 ++++++++++++++++++++++++++++
 2 files changed, 32 insertions(+), 3 deletions(-)

diff --git a/src/blob.c b/src/blob.c
index 01ebf075e26..79096ee9544 100644
--- a/src/blob.c
+++ b/src/blob.c
@@ -138,12 +138,13 @@ static int write_file_filtered(
 	git_object_size_t *size,
 	git_odb *odb,
 	const char *full_path,
-	git_filter_list *fl)
+	git_filter_list *fl,
+	git_repository* repo)
 {
 	int error;
 	git_buf tgt = GIT_BUF_INIT;
 
-	error = git_filter_list_apply_to_file(&tgt, fl, NULL, full_path);
+	error = git_filter_list_apply_to_file(&tgt, fl, repo, full_path);
 
 	/* Write the file to disk if it was properly filtered */
 	if (!error) {
@@ -238,7 +239,7 @@ int git_blob__create_from_paths(
 			error = write_file_stream(id, odb, content_path, size);
 		else {
 			/* We need to apply one or more filters */
-			error = write_file_filtered(id, &size, odb, content_path, fl);
+			error = write_file_filtered(id, &size, odb, content_path, fl, repo);
 
 			git_filter_list_free(fl);
 		}
diff --git a/tests/win32/longpath.c b/tests/win32/longpath.c
index ebfcc4d0d93..4bc8a837d87 100644
--- a/tests/win32/longpath.c
+++ b/tests/win32/longpath.c
@@ -90,3 +90,31 @@ void test_win32_longpath__status_and_add(void)
 	git_buf_dispose(&out);
 #endif
 }
+
+void test_win32_longpath__status_and_add_with_filter(void)
+{
+#ifdef GIT_WIN32
+	git_repository *repo = cl_git_sandbox_init("testrepo");
+	git_index *index;
+	git_buf out = GIT_BUF_INIT;
+	unsigned int status_flags;
+
+	cl_repo_set_bool(repo, "core.longpaths", true);
+        cl_repo_set_bool(repo, "core.autocrlf", true);
+	cl_git_pass(git_repository_workdir_path(&out, repo, LONG_FILENAME));
+
+	cl_git_rewritefile(out.ptr, "This is a long path.\r\n");
+
+	cl_git_pass(git_status_file(&status_flags, repo, LONG_FILENAME));
+	cl_assert_equal_i(GIT_STATUS_WT_NEW, status_flags);
+
+	cl_git_pass(git_repository_index(&index, repo));
+	cl_git_pass(git_index_add_bypath(index, LONG_FILENAME));
+
+	cl_git_pass(git_status_file(&status_flags, repo, LONG_FILENAME));
+	cl_assert_equal_i(GIT_STATUS_INDEX_NEW, status_flags);
+
+	git_index_free(index);
+	git_buf_dispose(&out);
+#endif
+}

From 6cf9a0b3ee341b8f56be7c1de4f2b23e98c28bbd Mon Sep 17 00:00:00 2001
From: Laurence McGlashan <laurence.mcglashan@gmail.com>
Date: Tue, 14 Sep 2021 12:34:45 +0100
Subject: [PATCH 2/3] Refactor shared code in longpath test.

---
 tests/win32/longpath.c | 34 ++++++++++++----------------------
 1 file changed, 12 insertions(+), 22 deletions(-)

diff --git a/tests/win32/longpath.c b/tests/win32/longpath.c
index 4bc8a837d87..294faea996c 100644
--- a/tests/win32/longpath.c
+++ b/tests/win32/longpath.c
@@ -64,15 +64,11 @@ void test_win32_longpath__workdir_path_validated(void)
 #endif
 }
 
-void test_win32_longpath__status_and_add(void)
-{
-#ifdef GIT_WIN32
-	git_repository *repo = cl_git_sandbox_init("testrepo");
+static void assert_longpath_status_and_add(git_repository* repo) {
 	git_index *index;
 	git_buf out = GIT_BUF_INIT;
 	unsigned int status_flags;
 
-	cl_repo_set_bool(repo, "core.longpaths", true);
 	cl_git_pass(git_repository_workdir_path(&out, repo, LONG_FILENAME));
 
 	cl_git_rewritefile(out.ptr, "This is a long path.\r\n");
@@ -88,33 +84,27 @@ void test_win32_longpath__status_and_add(void)
 
 	git_index_free(index);
 	git_buf_dispose(&out);
-#endif
 }
 
-void test_win32_longpath__status_and_add_with_filter(void)
+void test_win32_longpath__status_and_add(void)
 {
 #ifdef GIT_WIN32
 	git_repository *repo = cl_git_sandbox_init("testrepo");
-	git_index *index;
-	git_buf out = GIT_BUF_INIT;
-	unsigned int status_flags;
 
 	cl_repo_set_bool(repo, "core.longpaths", true);
-        cl_repo_set_bool(repo, "core.autocrlf", true);
-	cl_git_pass(git_repository_workdir_path(&out, repo, LONG_FILENAME));
 
-	cl_git_rewritefile(out.ptr, "This is a long path.\r\n");
-
-	cl_git_pass(git_status_file(&status_flags, repo, LONG_FILENAME));
-	cl_assert_equal_i(GIT_STATUS_WT_NEW, status_flags);
+	assert_longpath_status_and_add(repo);
+#endif
+}
 
-	cl_git_pass(git_repository_index(&index, repo));
-	cl_git_pass(git_index_add_bypath(index, LONG_FILENAME));
+void test_win32_longpath__status_and_add_with_filter(void)
+{
+#ifdef GIT_WIN32
+	git_repository *repo = cl_git_sandbox_init("testrepo");
 
-	cl_git_pass(git_status_file(&status_flags, repo, LONG_FILENAME));
-	cl_assert_equal_i(GIT_STATUS_INDEX_NEW, status_flags);
+	cl_repo_set_bool(repo, "core.longpaths", true);
+	cl_repo_set_bool(repo, "core.autocrlf", true);
 
-	git_index_free(index);
-	git_buf_dispose(&out);
+	assert_longpath_status_and_add(repo);
 #endif
 }

From 0d30e7bb3df520bb4f36d54b339baf231864b05d Mon Sep 17 00:00:00 2001
From: Laurence McGlashan <mail@laurencemcglashan.com>
Date: Tue, 14 Sep 2021 13:07:33 +0100
Subject: [PATCH 3/3] Apply suggestions from code review

Co-authored-by: Edward Thomson <ethomson@github.com>
---
 tests/win32/longpath.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/tests/win32/longpath.c b/tests/win32/longpath.c
index 294faea996c..f300544f48d 100644
--- a/tests/win32/longpath.c
+++ b/tests/win32/longpath.c
@@ -64,6 +64,7 @@ void test_win32_longpath__workdir_path_validated(void)
 #endif
 }
 
+#ifdef GIT_WIN32
 static void assert_longpath_status_and_add(git_repository* repo) {
 	git_index *index;
 	git_buf out = GIT_BUF_INIT;
@@ -85,6 +86,7 @@ static void assert_longpath_status_and_add(git_repository* repo) {
 	git_index_free(index);
 	git_buf_dispose(&out);
 }
+#endif
 
 void test_win32_longpath__status_and_add(void)
 {
